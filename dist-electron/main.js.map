{"version":3,"file":"main.js","sources":["../electron/main.ts"],"sourcesContent":["import { app, BrowserWindow, ipcMain, Menu, shell } from 'electron'\nimport { createRequire } from 'node:module'\nimport { fileURLToPath } from 'node:url'\nimport path from 'node:path'\nimport { spawn } from 'child_process'\n\nconst require = createRequire(import.meta.url)\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\n\nprocess.env.APP_ROOT = path.join(__dirname, '../')\n\nexport const MAIN_DIST = path.join(process.env.APP_ROOT, 'dist-electron')\nexport const RENDERER_DIST = path.join(process.env.APP_ROOT, 'dist')\nexport const VITE_DEV_SERVER_URL = process.env.VITE_DEV_SERVER_URL\n\nprocess.env.VITE_PUBLIC = VITE_DEV_SERVER_URL\n  ? path.join(process.env.APP_ROOT, 'public')\n  : RENDERER_DIST\n\nif (!app.requestSingleInstanceLock()) {\n  app.quit()\n  process.exit(0)\n}\n\nlet win: BrowserWindow | null = null\nconst preload = path.join(__dirname, 'preload.js')\nconst indexHtml = path.join(RENDERER_DIST, 'index.html')\n\nasync function createWindow() {\n  win = new BrowserWindow({\n    title: 'Claude Code Studio',\n    icon: path.join(process.env.VITE_PUBLIC, 'favicon.ico'),\n    width: 1200,\n    height: 800,\n    minWidth: 800,\n    minHeight: 600,\n    webPreferences: {\n      preload,\n      nodeIntegration: false,\n      contextIsolation: true,\n    },\n  })\n\n  if (VITE_DEV_SERVER_URL) {\n    win.loadURL(VITE_DEV_SERVER_URL)\n    win.webContents.openDevTools()\n  } else {\n    win.loadFile(indexHtml)\n  }\n\n  win.webContents.on('did-finish-load', () => {\n    win?.webContents.send('main-process-message', new Date().toLocaleString())\n  })\n\n  win.webContents.setWindowOpenHandler(({ url }) => {\n    shell.openExternal(url)\n    return { action: 'deny' }\n  })\n}\n\napp.whenReady().then(() => {\n  createWindow()\n  \n  app.on('activate', () => {\n    if (BrowserWindow.getAllWindows().length === 0) createWindow()\n  })\n})\n\napp.on('window-all-closed', () => {\n  win = null\n  if (process.platform !== 'darwin') app.quit()\n})\n\napp.on('second-instance', () => {\n  if (win) {\n    if (win.isMinimized()) win.restore()\n    win.focus()\n  }\n})\n\n// IPC handlers for Claude Code integration\nipcMain.handle('execute-claude-code', async (event, command: string) => {\n  return new Promise((resolve, reject) => {\n    const claudeProcess = spawn('claude-code', command.split(' '), {\n      shell: true,\n      stdio: 'pipe'\n    })\n\n    let stdout = ''\n    let stderr = ''\n\n    claudeProcess.stdout.on('data', (data) => {\n      stdout += data.toString()\n    })\n\n    claudeProcess.stderr.on('data', (data) => {\n      stderr += data.toString()\n    })\n\n    claudeProcess.on('close', (code) => {\n      if (code === 0) {\n        resolve(stdout)\n      } else {\n        reject(new Error(stderr))\n      }\n    })\n  })\n})\n\nipcMain.handle('get-system-info', () => {\n  return {\n    platform: process.platform,\n    arch: process.arch,\n    node: process.version,\n    electron: process.versions.electron\n  }\n})"],"names":["createRequire","__dirname","fileURLToPath","app","BrowserWindow","shell","ipcMain","spawn"],"mappings":"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"}